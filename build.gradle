plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.1.3'
}

group = 'com.dvdrental'
version = '0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jib {
	from {
		image = 'openjdk:alpine'
	}
	container.appRoot = '/app'
	container.entrypoint = ['java', '-jar', '/app/*.jar']
	to {
		image = 'colabdevops/rental'
		if (project.hasProperty("tag")) {   // precisa passar variavel -Ptag=100
			tags = [project.getProperty("tag")]
		} else {
			tags = ["dev"]
		}
	}
	container {
		//jvmFlags = ['-Dmy.property=example.value', '-Xms512m', '-Xdebug']
		mainClass = '/src/main/java/com.dvdrental.payment.RentalApplication'
		//args = ['some', 'args']
		//ports = ['1000', '2000-2003/udp']
		//labels = [key1:'value1', key2:'value2']
		//format = 'OCI'
	}
	extraDirectories {
		paths {
			path {
				from = 'build/libs/*.jar'
				into = '/app/app.jar'
				includes = ['single-file.xml']
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
