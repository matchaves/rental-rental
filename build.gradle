plugins {
	id 'org.springframework.boot' version '2.3.8.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.dvdrental'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "Hoxton.BUILD-SNAPSHOT")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.springframework.cloud:spring-cloud-starter'
	//implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	//implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	//implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	//implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
	//implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'io.micrometer:micrometer-registry-datadog'
	//runtimeOnly 'io.micrometer:micrometer-registry-influx'
	//runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

/*dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}*/

test {
	useJUnitPlatform()
}
